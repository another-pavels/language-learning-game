name: Deploy to Amazon EC2

on:
  workflow_run:
    workflows:
      - "Docker Image CI"
    types:
      - "completed"
    branches:
      - "main"

env:
  AWS_REGION: ${{ vars.AWS_REGION }}

permissions:
  contents: read

jobs:
  on-success:
    name: Deploy-success
    runs-on: ubuntu-22.04
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Set outputs
        id: vars
        run: |
          echo "sha_short=$(git rev-parse --short HEAD)" >>$GITHUB_OUTPUT &&
          echo "public_dns_name=$(aws ec2 describe-instances \
              --filters \
              'Name=instance-state-name,Values=running' \
              'Name=tag:Name,Values=group-c-language-learning-game-server-2' \
              --query \
              'Reservations[*].Instances[*].[PublicDnsName]' \
              --output text)" >>$GITHUB_OUTPUT

      - name: Deploy to Amazon EC2
        env:
          AWS_EC2_PRIVATE_KEY: ${{ secrets.AWS_EC2_PRIVATE_KEY  }}
          AWS_EC2_HOSTNAME: ${{ steps.vars.outputs.public_dns_name }}
          AWS_EC2_USER_NAME: ${{ secrets.AWS_EC2_USER_NAME  }}
          GITHUB_SHA_SHORT: ${{ steps.vars.outputs.sha_short }}
        run: |
          echo "Github commit is: ${GITHUB_SHA_SHORT}"
          echo "$AWS_EC2_PRIVATE_KEY" > private_key && chmod 600 private_key
          sed -i "s|<change_image_tag>|${GITHUB_SHA_SHORT}|g" ./docker-compose.yml
          rsync --stats -avh --progress \
          -e "ssh -o StrictHostKeyChecking=no -i private_key" \
          ./docker-compose.yml ${AWS_EC2_USER_NAME}@${AWS_EC2_HOSTNAME}:/home/${AWS_EC2_USER_NAME}
          ssh -o StrictHostKeyChecking=no -i private_key ${AWS_EC2_USER_NAME}@${AWS_EC2_HOSTNAME} '

            #Now we have got the access of EC2 and we will start the deploy .
            docker --version &&
            docker-compose --version &&
            docker-compose up -d
          '
          echo "Deploy completed!"
          echo "Visit website: http://${AWS_EC2_HOSTNAME}"

  on-failure:
    name: Deploy-fail
    runs-on: ubuntu-22.04
    if: ${{ github.event.workflow_run.conclusion == 'failure' }}
    steps:
      - run: echo "Docker Image CI workflow was a failure, skip action..."
